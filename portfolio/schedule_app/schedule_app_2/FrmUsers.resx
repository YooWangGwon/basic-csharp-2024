<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>